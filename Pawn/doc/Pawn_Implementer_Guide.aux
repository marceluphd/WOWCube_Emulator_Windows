\@definelabel{p.Introduction}{1}{page}{5}
\@definelabel{p.compiler.prefixfile}{2}{page}{5}
\@definepageanchor{2}
\@definelabel{p.The compiler}{4}{page}{8}
\@definelabel{p.compiler}{4}{page}{8}
\@definepageanchor{4}
\@definelabel{p.Setting up the compiler}{4}{page}{8}
\@definelabel{p.Installation}{4}{page}{8}
\@definepageanchor{4}
\@definelabel{mb.1}{4}{marginbox}{8}
\@definelabel{p.The configuration file}{5}{page}{8}
\@definelabel{p.compiler.cfgfile}{5}{page}{8}
\@definepageanchor{5}
\@definelabel{p.Errors}{5}{page}{9}
\@definelabel{p.Compiler errors}{5}{page}{9}
\@definelabel{p.Run time errors}{5}{page}{9}
\@definelabel{mb.2}{5}{marginbox}{9}
\@definelabel{p.The abstract machine}{6}{page}{10}
\@definelabel{p.tools.amx}{6}{page}{10}
\@definepageanchor{6}
\@definelabel{p.Deployment / installation}{6}{page}{10}
\@definelabel{p.amx.deployment}{6}{page}{10}
\@definepageanchor{6}
\@definelabel{mb.3}{6}{marginbox}{10}
\@definelabel{p.Using the abstract machine}{6}{page}{10}
\@definelabel{p.prun0}{6}{page}{10}
\@definelabel{p.LoadProgram}{8}{page}{12}
\@definepageanchor{9}
\@definelabel{p.FreeProgram}{10}{page}{13}
\@definelabel{p.Controlling program execution}{10}{page}{14}
\@definelabel{p.dbg.hook}{10}{page}{14}
\@definepageanchor{10}
\@definepageanchor{11}
\@definelabel{mb.4}{11}{marginbox}{15}
\@definelabel{p.A smarter ``break-out'' hook}{12}{page}{16}
\@definelabel{p.Monitoring stack/heap usage}{13}{page}{17}
\@definelabel{p.userdata.ex}{13}{page}{17}
\@definepageanchor{13}
\@definelabel{mb.5}{13}{marginbox}{17}
\@definepageanchor{14}
\@definelabel{p.Preparing for memory-hungry scripts}{14}{page}{18}
\@definelabel{mb.6}{14}{marginbox}{18}
\@definepageanchor{16}
\@definelabel{mb.7}{17}{marginbox}{21}
\@definelabel{p.Calling ``public'' functions}{17}{page}{21}
\@definepageanchor{17}
\@definepageanchor{18}
\@definelabel{mb.8}{18}{marginbox}{22}
\@definelabel{p.prun.rot13}{18}{page}{22}
\@definepageanchor{20}
\@definepageanchor{21}
\@definepageanchor{22}
\@definelabel{p.ex.trimmed}{22}{page}{26}
\@definelabel{p.Function reference}{23}{page}{27}
\@definelabel{mb.9}{23}{marginbox}{27}
\@definelabel{p.amx.Address}{23}{page}{27}
\@definepageanchor{23}
\@definelabel{p.amx.Align}{23}{page}{27}
\@definepageanchor{23}
\@definepageanchor{24}
\@definelabel{p.amx.AlignCell}{24}{page}{28}
\@definepageanchor{24}
\@definelabel{p.amx.Allot}{24}{page}{28}
\@definepageanchor{24}
\@definepageanchor{25}
\@definelabel{p.amx.Callback}{25}{page}{29}
\@definepageanchor{25}
\@definelabel{mb.10}{26}{marginbox}{30}
\@definelabel{p.amx.ctof}{26}{page}{30}
\@definepageanchor{26}
\@definelabel{p.amx.Exec}{27}{page}{31}
\@definepageanchor{27}
\@definelabel{p.amx.FindNative}{27}{page}{31}
\@definepageanchor{27}
\@definelabel{p.amx.FindPublic}{28}{page}{32}
\@definepageanchor{28}
\@definelabel{p.amx.FindPubVar}{28}{page}{32}
\@definepageanchor{28}
\@definelabel{p.amx.Flags}{28}{page}{32}
\@definepageanchor{28}
\@definelabel{p.amx.ftoc}{29}{page}{33}
\@definepageanchor{29}
\@definelabel{p.amx.GetNative}{29}{page}{33}
\@definepageanchor{29}
\@definelabel{p.amx.GetPublic}{30}{page}{34}
\@definepageanchor{30}
\@definelabel{p.amx.GetPubVar}{31}{page}{35}
\@definepageanchor{31}
\@definelabel{p.amx.GetString}{31}{page}{35}
\@definepageanchor{31}
\@definelabel{p.amx.GetUserData}{32}{page}{36}
\@definepageanchor{32}
\@definelabel{p.amx.Init}{32}{page}{36}
\@definepageanchor{32}
\@definelabel{mb.11}{33}{marginbox}{37}
\@definepageanchor{33}
\@definelabel{p.amx.InitJIT}{33}{page}{37}
\@definepageanchor{33}
\@definelabel{p.amx.MemInfo}{34}{page}{38}
\@definepageanchor{34}
\@definelabel{p.amx.NameLength}{35}{page}{39}
\@definepageanchor{35}
\@definelabel{p.amx.NativeInfo}{35}{page}{39}
\@definepageanchor{35}
\@definelabel{p.amx.NumNatives}{35}{page}{39}
\@definepageanchor{35}
\@definelabel{p.amx.NumPublics}{36}{page}{40}
\@definepageanchor{36}
\@definelabel{p.amx.NumPubVars}{36}{page}{40}
\@definepageanchor{36}
\@definelabel{p.amx.Push}{36}{page}{40}
\@definepageanchor{36}
\@definelabel{p.amx.PushAddress}{37}{page}{41}
\@definepageanchor{37}
\@definelabel{p.amx.PushArray}{37}{page}{41}
\@definepageanchor{37}
\@definelabel{p.amx.PushString}{38}{page}{42}
\@definepageanchor{38}
\@definelabel{p.amx.RaiseError}{39}{page}{43}
\@definepageanchor{39}
\@definelabel{p.amx.Register}{39}{page}{43}
\@definepageanchor{39}
\@definelabel{p.amx.Release}{40}{page}{44}
\@definepageanchor{40}
\@definelabel{p.amx.SetCallback}{40}{page}{44}
\@definepageanchor{40}
\@definelabel{p.amx.SetDebugHook}{41}{page}{45}
\@definepageanchor{41}
\@definelabel{p.amx.SetString}{41}{page}{45}
\@definepageanchor{41}
\@definelabel{p.amx.SetUserData}{42}{page}{46}
\@definepageanchor{42}
\@definelabel{p.amx.StrLen}{42}{page}{46}
\@definepageanchor{42}
\@definelabel{p.amx.StrParam}{43}{page}{47}
\@definepageanchor{43}
\@definelabel{p.amx.UTF8Check}{43}{page}{47}
\@definepageanchor{43}
\@definelabel{p.amx.UTF8Get}{44}{page}{48}
\@definepageanchor{44}
\@definelabel{p.amx.UTF8Len}{45}{page}{49}
\@definepageanchor{45}
\@definelabel{p.amx.UTF8Put}{45}{page}{49}
\@definepageanchor{45}
\@definelabel{p.Error codes (run-time errors)}{46}{page}{50}
\@definelabel{p.amx.errors}{46}{page}{50}
\@definepageanchor{46}
\@definepageanchor{47}
\@definelabel{p.Extension modules}{49}{page}{53}
\@definelabel{p.extension.modules}{49}{page}{53}
\@definepageanchor{49}
\@definelabel{p.Creating an extension module}{49}{page}{53}
\@definelabel{p.1. Writing the native functions}{49}{page}{53}
\@definepageanchor{49}
\@definepageanchor{50}
\@definelabel{mb.12}{50}{marginbox}{54}
\@definelabel{p.2. Linking the functions to the abstract machine}{50}{page}{54}
\@definelabel{p.extension.linking}{50}{page}{54}
\@definelabel{p.extension.power.ex}{50}{page}{54}
\@definelabel{mb.13}{51}{marginbox}{55}
\@definepageanchor{51}
\@definelabel{p.3. writing an include file for the native functions}{52}{page}{56}
\@definepageanchor{52}
\@definelabel{p.ex.power.natives}{52}{page}{56}
\@definepageanchor{52}
\@definelabel{p.return.array.decl}{52}{page}{56}
\@definelabel{p.Writing ``wrappers''}{53}{page}{56}
\@definepageanchor{53}
\@definelabel{p.Pass-by-value, the simplest case}{53}{page}{57}
\@definelabel{p.ex.simple.wrapper}{53}{page}{57}
\@definepageanchor{53}
\@definelabel{p.Floating point}{53}{page}{57}
\@definepageanchor{54}
\@definelabel{p.Strings}{54}{page}{58}
\@definepageanchor{54}
\@definepageanchor{55}
\@definelabel{p.ex.strparam}{55}{page}{59}
\@definepageanchor{55}
\@definelabel{p.Pass-by-reference}{55}{page}{59}
\@definepageanchor{55}
\@definepageanchor{56}
\@definelabel{p.Arrays}{56}{page}{60}
\@definelabel{p.ex.array.wrapper}{56}{page}{60}
\@definepageanchor{56}
\@definelabel{mb.14}{56}{marginbox}{60}
\@definelabel{p.ex.array2.wrapper}{57}{page}{61}
\@definepageanchor{57}
\@definelabel{p.Returning arrays}{57}{page}{61}
\@definelabel{p.return.array.imp}{57}{page}{61}
\@definelabel{p.Wrapping class methods (C++ interface)}{58}{page}{62}
\@definepageanchor{58}
\@definelabel{mb.15}{59}{marginbox}{63}
\@definepageanchor{59}
\@definepageanchor{60}
\@definelabel{p.Dynamically loadable extension modules}{61}{page}{65}
\@definelabel{p.extension.dynaload}{61}{page}{65}
\@definepageanchor{61}
\@definepageanchor{62}
\@definelabel{p.Error checking in native functions}{62}{page}{66}
\@definepageanchor{62}
\@definelabel{mb.16}{63}{marginbox}{66}
\@definepageanchor{63}
\@definelabel{mb.17}{63}{marginbox}{67}
\@definelabel{p.Customizing the native function callback}{63}{page}{67}
\@definelabel{p.amx.dispatcher}{63}{page}{67}
\@definepageanchor{63}
\@definepageanchor{64}
\@definelabel{p.nativetable}{64}{page}{68}
\@definepageanchor{64}
\@definelabel{mb.18}{64}{marginbox}{68}
\@definelabel{p.Building the compiler}{67}{page}{71}
\@definelabel{Building the compiler}{65}{Appendix}{71}
\@definepageanchor{67}
\@definelabel{p.Compile-time options}{68}{page}{71}
\@definepageanchor{68}
\@definepageanchor{69}
\@definelabel{p.Summary of compiler macros}{69}{page}{73}
\@definepageanchor{69}
\@definelabel{p.Embedding the compiler into an application}{69}{page}{73}
\@definelabel{p.libpawnc}{69}{page}{73}
\@definepageanchor{70}
\@definelabel{p.Building the Abstract Machine}{72}{page}{76}
\@definelabel{Building the Abstract Machine}{66}{Appendix}{76}
\@definepageanchor{72}
\@definepageanchor{73}
\@definelabel{mb.19}{73}{marginbox}{77}
\@definepageanchor{73}
\@definelabel{p.amx.callconv}{74}{page}{78}
\@definepageanchor{74}
\@definelabel{p.threading.method}{74}{page}{78}
\@definepageanchor{74}
\@definepageanchor{75}
\@definelabel{p.Summary of Abstract Machine macros}{75}{page}{79}
\@definepageanchor{75}
\@definelabel{p.amx.libpath}{75}{page}{79}
\@definepageanchor{75}
\@definepageanchor{76}
\@definelabel{p.ANSI C}{77}{page}{80}
\@definepageanchor{77}
\@definelabel{p.Alternate P-code interpreter: GNU GCC}{77}{page}{81}
\@definelabel{p.amx.gcc}{77}{page}{81}
\@definepageanchor{77}
\@definepageanchor{78}
\@definelabel{p.Alternate P-code interpreter: assembler}{78}{page}{82}
\@definelabel{p.amx.asm}{78}{page}{82}
\@definepageanchor{78}
\@definepageanchor{79}
\@definepageanchor{80}
\@definelabel{p.Just-In-Time compiler}{81}{page}{85}
\@definelabel{p.amx.jit}{81}{page}{85}
\@definepageanchor{81}
\@definepageanchor{82}
\@definepageanchor{83}
\@definelabel{p.Minimizing the size of the abstract machine}{84}{page}{88}
\@definepageanchor{84}
\@definelabel{p.Adding a terminal to the abstract machine}{85}{page}{89}
\@definelabel{p.terminal}{85}{page}{89}
\@definepageanchor{85}
\@definepageanchor{86}
\@definelabel{p.Support for floating point in the Abstract Machine}{86}{page}{90}
\@definepageanchor{86}
\@definepageanchor{87}
\@definelabel{p.Compiling ``dynamically loadable'' modules}{87}{page}{91}
\@definelabel{p.extension.dynaload.imp}{87}{page}{91}
\@definepageanchor{87}
\@definelabel{mb.20}{88}{marginbox}{92}
\@definepageanchor{88}
\@definelabel{p.Using CMake}{90}{page}{94}
\@definelabel{Using CMake}{67}{Appendix}{94}
\@definepageanchor{90}
\@definelabel{p.Abstract Machine reference}{92}{page}{96}
\@definelabel{Abstract Machine reference}{68}{Appendix}{96}
\@definelabel{p.Register layout}{92}{page}{96}
\@definepageanchor{92}
\@definelabel{p.Memory image}{92}{page}{96}
\@definelabel{amxinmemory}{2}{Figure}{97}
\@definelabel{p.amxinmemory}{93}{page}{97}
\@definepageanchor{93}
\@definelabel{p.amx.header}{93}{page}{97}
\@definepageanchor{93}
\@definepageanchor{94}
\@definepageanchor{95}
\@definelabel{p.Instruction reference}{96}{page}{100}
\@definepageanchor{96}
\@definelabel{p.Branching}{101}{page}{105}
\@definepageanchor{101}
\@definelabel{p.Macro instructions}{102}{page}{105}
\@definepageanchor{102}
\@definelabel{p.Opcode packing}{102}{page}{106}
\@definepageanchor{102}
\@definelabel{p.Native call opcodes}{102}{page}{106}
\@definelabel{p.native.call.opcodes}{102}{page}{106}
\@definepageanchor{102}
\@definepageanchor{103}
\@definelabel{p.Cross-platform support}{103}{page}{107}
\@definepageanchor{103}
\@definelabel{p.The ``switch'' instruction and case table lay-out}{104}{page}{108}
\@definelabel{p.Debugging support}{105}{page}{109}
\@definelabel{Debugging support}{69}{Appendix}{109}
\@definepageanchor{105}
\@definelabel{mb.21}{105}{marginbox}{109}
\@definepageanchor{105}
\@definelabel{p.The file table}{105}{page}{109}
\@definelabel{p.The line table}{106}{page}{110}
\@definelabel{p.The symbol table}{106}{page}{110}
\@definelabel{p.The tag name table}{107}{page}{111}
\@definelabel{p.The automaton table}{108}{page}{112}
\@definelabel{p.The state table}{108}{page}{112}
\@definelabel{p.Functions}{108}{page}{112}
\@definelabel{p.Code generation notes}{109}{page}{113}
\@definelabel{Code generation notes}{70}{Appendix}{113}
\@definepageanchor{109}
\@definelabel{p.multdim-implementation}{110}{page}{114}
\@definepageanchor{111}
\@definelabel{p.Adding a garbage collector}{113}{page}{117}
\@definelabel{Adding a garbage collector}{71}{Appendix}{117}
\@definepageanchor{113}
\@definelabel{p.How to use}{113}{page}{117}
\@definepageanchor{113}
\@definepageanchor{114}
\@definelabel{p.Rescaling the garbage collector}{115}{page}{118}
\@definepageanchor{115}
\@definelabel{p.An example implementation}{116}{page}{120}
\@definepageanchor{116}
\@definepageanchor{118}
\@definelabel{p.Other notes}{119}{page}{123}
\@definepageanchor{119}
\@definepageanchor{120}
\@definelabel{p.Encrypted scripts}{121}{page}{125}
\@definelabel{Encrypted scripts}{72}{Appendix}{125}
\@definepageanchor{121}
\@definelabel{p.Running scripts from ROM}{122}{page}{126}
\@definelabel{Running scripts from ROM}{73}{Appendix}{126}
\@definepageanchor{122}
\@definelabel{mb.22}{122}{marginbox}{126}
\@definelabel{p.Running scripts with overlays}{125}{page}{129}
\@definelabel{Running scripts with overlays}{74}{Appendix}{129}
\@definelabel{p.app.overlays}{125}{page}{129}
\@definepageanchor{125}
\@definelabel{p.Configuring the compiler}{125}{page}{129}
\@definelabel{p.Initializing the abstract machine}{126}{page}{130}
\@definelabel{p.The overlay callback function}{127}{page}{131}
\@definelabel{mb.23}{128}{marginbox}{132}
\@definelabel{p.Loading scripts with and without overlays}{128}{page}{132}
\@definelabel{p.License}{129}{page}{133}
\@definelabel{License}{75}{Appendix}{133}
\@definepageanchor{129}
\@definelabel{p.Index}{133}{page}{137}
